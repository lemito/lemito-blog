{"version":3,"sources":["resources/pre-upload-img-gray.svg","resources/pre-upload-img-black.svg","resources/backside-logo.png","resources/backside-logo-max768.jpg","components/left-panel/letters-content/title/Title.js","util/const.js","util/api.js","components/left-panel/letters-content/letters-content/LettersContent.js","components/left-panel/letters-content/letters-content/checkbox-controller.js","components/icons/telegram-icon/TelegramIcon.js","components/icons/git-icon/GitIcon.js","components/left-panel/about/About.js","components/left-panel/footer/Footer.js","components/left-panel/left-panel/LeftPanel.js","components/async-loader/AsyncLoader.js","components/letter/letter-date/LetterDate.js","components/letter/letter/Letter.js","components/public/Public.js","components/private-route/PrivateRoute.js","components/login/Login.js","components/icons/garbage-icon/GarbageIcon.js","components/authorship/img-uploader/ImgUploader.js","components/authorship/letter-template/autoresize.js","components/authorship/letter-template/LetterTemplate.js","components/authorship/authorship/Authorship.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","Component","render","id","title","state","isSelected","handleTitleSelect","this","props","defaultClassName","className","onClick","i","passwd","chars","c","Math","floor","random","length","charAt","API_BASE_URL","ACCESS_TOKEN","LETTERS_CONTENT_MODE","console","log","request","options","headers","undefined","localStorage","getItem","axios","url","method","data","LettersContent","chronology","value","titles","selectedTitleId","selectedChronology","newLetterTitle","componentWillMount","async","contentsState","history","match","path","mode","then","response","setState","chronologySort","params","parseInt","lastSelectedTitleId","push","handleChronologySelect","find","sort","a","b","dateOfPublication","toggleInputCheckbox","document","getElementById","checked","uncheckTogleInput","updateContents","componentWillUnmount","beforeLettersContentsUnMount","type","htmlFor","map","key","to","TelegramIcon","xmlns","viewBox","d","transform","GitIcon","About","about","href","target","rel","Footer","isAbout","showAbout","footerTitles","LeftPanel","refToContentsUpdate","React","createRef","prevState","window","scroll","current","ref","AsyncLoader","LetterDate","date","moment","local","day","month","year","toString","Letter","htmlText","pictureURL","isLoading","componentDidMount","pictureName","dangerouslySetInnerHTML","__html","onAccept","alert","debug","enableDeclineButton","declineButtonText","onDecline","style","fontSize","Public","component","PrivateRoute","authenticated","rest","pathname","from","location","Login","username","password","handleUsernameChange","event","handlePasswordChange","handleSubmit","loginRequest","login","setItem","accessToken","onLogIn","catch","error","JSON","parse","stringify","status","warning","onChange","onMouseDown","showPassword","onMouseUp","hidePassword","GarbageIcon","width","height","ImgUploader","img","preUploadImgLeave","imgControlDisplay","fileInputHandler","files","URL","createObjectURL","handleImgChange","onImgOver","preUploadImgOn","onImgLeave","removeCurrentImg","componentWillReceiveProps","pictureUrl","display","onMouseOver","onMouseLeave","fileInput","click","src","alt","autoresize","elementId","textarea","scrollHeight","LetterTemplate","letterStates","label","Date","picture","letterState","isBeforeRemovingPopUp","componentDidUpdate","saveLetter","preventDefault","letter","fileName","savePicture","cellContentsUpdate","showBeforeRemovingPopUp","allowRemoving","deleteLetter","formData","FormData","append","handleTitleChange","handleHtmlTextChange","handleDropDownSelect","placeholder","placeholderClassName","controlClassName","menuClassName","arrowClassName","onLogOut","PopUpBeforeDeleting","showPopUp","Authorship","App","isAuthenticated","handleLogIn","handleLogOut","removeItem","exect","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f541ab44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pre-upload-img-gray.5f7be11a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pre-upload-img-black.3f95cbbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/backside-logo.bd629c1f.png\";","module.exports = __webpack_public_path__ + \"static/media/backside-logo-max768.a80fabb5.jpg\";","import React, { Component } from \"react\";\r\n\r\nimport \"./Title.css\";\r\n\r\n\r\nclass Title extends Component {\r\n\r\n  render() {\r\n\r\n    const { id, title, state, isSelected, handleTitleSelect } = this.props;\r\n\r\n    let defaultClassName = \"title-div\";\r\n    if(state === \"DRAFT\") {\r\n      defaultClassName = \"draft-title\";\r\n    } else if(id === -100) {\r\n      defaultClassName = \"new-letter-title\";\r\n    }\r\n\r\n    return(\r\n      <div \r\n        className={ isSelected ? \"selected-title-div\" : defaultClassName }  \r\n        onClick={ () => handleTitleSelect(this.props) }>\r\n        \r\n          { title }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;","var i\r\nvar passwd = '';\r\nvar chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-__-';\r\nfor (i=1;i<8;i++) {\r\n    var c = Math.floor(Math.random()*chars.length + 1);\r\n    passwd += chars.charAt(c)\r\n}\r\nexport const API_BASE_URL = \"https://shrouded-retreat-21347.herokuapp.com\";\r\nexport const ACCESS_TOKEN = passwd;\r\nexport const LETTERS_CONTENT_MODE = [\"ALL\", \"PUBLIC\"];\r\nconsole.log(\"Your access token is \"+ passwd)\r\n","import { API_BASE_URL, ACCESS_TOKEN } from './const';\r\nimport axios from 'axios';\r\n\r\nconst request = (options) => {\r\n\r\n  let headers = {};\r\n  if(options.headers !== undefined)\r\n    headers = options.headers;\r\n\r\n  if(localStorage.getItem(ACCESS_TOKEN)) {\r\n    headers['Authorization'] = 'Bearer ' + localStorage.getItem(ACCESS_TOKEN);\r\n  }\r\n  \r\n  return axios({\r\n    url: options.url,\r\n    method: options.method,\r\n    data: options.data,\r\n    headers: headers\r\n  });\r\n}\r\n\r\nexport function getPublicTitles() {\r\n  return request({\r\n    url: API_BASE_URL + \"/public/letters/titles\",\r\n    method: \"GET\",\r\n    data: null\r\n  });\r\n}\r\n\r\nexport function getAllTitles() {\r\n  return request({\r\n    url: API_BASE_URL + \"/authorship/letters/titles\",\r\n    method: \"GET\",\r\n    data: null\r\n  });\r\n}\r\n\r\nexport function getPublicLetterById(id) {\r\n  return request({\r\n    url: API_BASE_URL + \"/public/letters/\" + id,\r\n    method: \"GET\",\r\n    data: null\r\n  });\r\n}\r\n\r\nexport function getAnyLetterById(id) {\r\n  return request({\r\n    url: API_BASE_URL + \"/authorship/letters/\" + id,\r\n    method: \"GET\",\r\n    data: null\r\n  });\r\n}\r\n\r\nexport function deleteLetter(id) {\r\n  return request({\r\n    url: API_BASE_URL + \"/authorship/letters/delete_letter/\" + id,\r\n    method: \"POST\",\r\n    data: null\r\n  });\r\n}\r\n\r\nexport function login(loginRequest) {\r\n  return request({\r\n    url: API_BASE_URL + \"/auth/signin\",\r\n    method: \"POST\",\r\n    data: loginRequest\r\n  });\r\n}\r\n\r\nexport function saveLetter(letter) {\r\n  return request({\r\n    url: API_BASE_URL + \"/authorship/letters/save_letter\",\r\n    method: \"POST\",\r\n    data: letter\r\n  });\r\n}\r\n\r\nexport function savePicture(picture) {\r\n  return request({\r\n    url: API_BASE_URL + \"/authorship/pictures/save_picture\",\r\n    method: \"POST\",\r\n    data: picture\r\n  });\r\n}\r\n\r\nexport function checkAuth() {\r\n  return request({\r\n    url: API_BASE_URL + \"/auth/is_authed\",\r\n    method: \"GET\"\r\n  });\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Title from \"../title/Title\";\r\n\r\nimport { uncheckTogleInput } from \"./checkbox-controller\";\r\nimport { getAllTitles, getPublicTitles } from \"../../../../util/api\";\r\nimport { LETTERS_CONTENT_MODE } from \"../../../../util/const\";\r\n\r\nimport \"./LettersContent.css\";\r\n\r\n\r\nclass LettersContent extends Component {\r\n\r\n  chronology = [\r\n    {value: \"new\", title: \"последнее\"},\r\n    {value: \"chronology\", title: \"хронология\"}\r\n  ];\r\n\r\n  state = {\r\n    titles: [],\r\n    selectedTitleId: 0,\r\n    selectedChronology: this.chronology[0],\r\n    newLetterTitle: false\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    const { contentsState, history, match, path, mode } = this.props;\r\n\r\n    if(contentsState === null) {\r\n      let titles = [];\r\n      if(mode === LETTERS_CONTENT_MODE[0]) {\r\n        await getAllTitles()\r\n          .then(response => { titles = response.data });\r\n        this.setState({newLetterTitle: true});\r\n      } else if(mode === LETTERS_CONTENT_MODE[1]) {\r\n        await getPublicTitles()\r\n          .then(response => { titles = response.data });\r\n      }\r\n  \r\n      titles = this.chronologySort(titles, this.chronology[0].value);\r\n\r\n      if (match.params.id !== \"last\") {\r\n        this.setState({\r\n          titles: titles,\r\n          selectedTitleId: parseInt(match.params.id)\r\n        });\r\n      } else {\r\n        const lastSelectedTitleId = titles[0].id;\r\n        history.push(`${path}/${lastSelectedTitleId}`);\r\n        this.setState({\r\n          titles: titles,\r\n          selectedTitleId: lastSelectedTitleId\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        titles: contentsState.titles,\r\n        selectedTitleId: contentsState.selectedTitleId,\r\n        selectedChronology: contentsState.selectedChronology,\r\n        newLetterTitle: contentsState.newLetterTitle\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.beforeLettersContentsUnMount(this.state);\r\n  }\r\n\r\n  handleChronologySelect = (props) => {\r\n    const titles = this.chronologySort(this.state.titles, props.state);\r\n    const selectedChronology = this.chronology.find(state => state.value === props.state);\r\n    this.setState({\r\n      titles: titles,\r\n      selectedChronology: selectedChronology\r\n    });\r\n  }\r\n\r\n  chronologySort = (titles, state) => {\r\n    if(state === this.chronology[0].value) {\r\n      titles.sort((a, b) => {\r\n        if(a.dateOfPublication < b.dateOfPublication)\r\n          return 1;\r\n        if(a.dateOfPublication > b.dateOfPublication)\r\n          return -1;\r\n        else return -1\r\n      });\r\n      this.setState({\r\n        titles: titles\r\n      });\r\n    } else if(state === this.chronology[1].value) {\r\n      titles.sort((a, b) => {\r\n        if(a.dateOfPublication > b.dateOfPublication)\r\n          return 1;\r\n        if(a.dateOfPublication < b.dateOfPublication)\r\n          return -1;\r\n        else return -1\r\n      });\r\n    }\r\n    return titles;\r\n  }\r\n\r\n  handleTitleSelect = (props) => {\r\n    this.setState({\r\n      selectedTitleId: props.id\r\n    });\r\n    uncheckTogleInput();\r\n  }\r\n\r\n  updateContents = () => {\r\n    const { history, path } = this.props;\r\n    history.push(`${path}/new_letter`);\r\n    this.componentWillMount();\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { path } = this.props;\r\n    const { selectedChronology, selectedTitleId, newLetterTitle } = this.state;\r\n    \r\n    return(\r\n      <div>\r\n        <input id=\"toggle-input\" type=\"checkbox\" />\r\n        <label htmlFor=\"toggle-input\" id=\"toggle-label\">письма</label>\r\n        <div className=\"letters-content-div animated\">\r\n          <div className=\"chronology-controller-div\">\r\n            { this.chronology.map((title, key) => {\r\n              return(\r\n                <span className=\"chronology-span\" key={ key }>\r\n                  <Title\r\n                    title={ title.title } \r\n                    state={ title.value } \r\n                    isSelected={ selectedChronology.value === title.value }\r\n                    handleTitleSelect={ this.handleChronologySelect } \r\n                  />\r\n                </span>\r\n              );\r\n            }) }\r\n          </div>\r\n          <div className=\"content-list-div\">\r\n            { newLetterTitle ? \r\n              <Link to={ `${path}/new_letter` } className=\"react-router-link\">\r\n                <Title\r\n                  id={ -100 } \r\n                  title={ \"новое письмо\" }\r\n                  handleTitleSelect={ () => {} }\r\n                /> \r\n              </Link>\r\n             : null }\r\n            { this.state.titles.map((title, key) => {\r\n              return(\r\n                <Link to={ `${path}/${title.id}` } className=\"react-router-link\" key={ key }>\r\n                  <Title \r\n                    id={ title.id }\r\n                    title={ title.title }\r\n                    dateOfPublication={ title.dateOfPublication }\r\n                    state={ title.state }\r\n                    isSelected={ selectedTitleId === title.id }\r\n                    handleTitleSelect={ this.handleTitleSelect }\r\n                  />\r\n                </Link>\r\n              )\r\n            }) }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LettersContent;","export function uncheckTogleInput() {\r\n  const toggleInputCheckbox = document.getElementById(\"toggle-input\");\r\n  if(toggleInputCheckbox.checked)\r\n    toggleInputCheckbox.checked = false;\r\n}","import React, { Component } from 'react';\r\n\r\nimport \"./TelegramIcon.css\";\r\n\r\n\r\nclass TelegramIcon extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 35.25 35.25\" className=\"telegram\">\r\n        <path d=\"M29.54,1.13,4.29,9.55a5,5,0,0,0,0,9.49l10.25,3.42L18,32.71a5,5,0,0,0,9.49,0L35.87,7.46a5,5,0,0,0-6.33-6.33Z\" transform=\"translate(-0.87 -0.87)\" />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TelegramIcon;","import React, { Component } from 'react';\r\n\r\nimport './GitIcon.css';\r\n\r\n\r\nclass GitIcon extends Component {\r\n\r\n  render() {\r\n\r\n    return(\r\n      <svg \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        viewBox=\"0 0 25.21 28.57\"\r\n        className=\"git\">\r\n        <path d=\"M24,31.53c0-.6,0-2.58,0-5a4.39,4.39,0,0,0-1.24-3.4c4.08-.46,8.38-2,8.38-9.06a7.1,7.1,0,0,0-1.89-4.93A6.57,6.57,0,0,0,29,4.26S27.5,3.76,24,6.14a17.34,17.34,0,0,0-9.19,0c-3.5-2.38-5-1.88-5-1.88a6.57,6.57,0,0,0-.18,4.85A7.1,7.1,0,0,0,7.69,14c0,7,4.28,8.61,8.36,9.07a3.92,3.92,0,0,0-1.17,2.46A3.9,3.9,0,0,1,9.54,24a3.86,3.86,0,0,0-2.81-1.89s-1.79,0-.13,1.11a4.86,4.86,0,0,1,2,2.69s1.08,3.57,6.18,2.46c0,1.53,0,2.69,0,3.12v1.26H24Z\" transform=\"translate(-5.89 -4.21)\" />\r\n      </svg> \r\n    );\r\n  }\r\n}\r\n\r\nexport default GitIcon;","import React, { Component } from \"react\";\r\n\r\nimport TelegramIcon from \"../../icons/telegram-icon/TelegramIcon\";\r\nimport GitIcon from \"../../icons/git-icon/GitIcon\";\r\n\r\nimport \"./About.css\";\r\n\r\n\r\nclass About extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"about-div animated\">\r\n        <div className=\"inner-html\">\r\n          <p>{ about }</p>\r\n        </div>\r\n        <div className=\"contacts-div\">\r\n          <div className=\"contact-div\">\r\n            <a href=\"https://t.me/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <TelegramIcon />\r\n            </a>\r\n            author\r\n          </div>\r\n          <div className=\"contact-div\">\r\n            <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <GitIcon />\r\n            </a>\r\n            sorce\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst about = \r\n  `I am lemito.`;\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\n\r\nclass Footer extends Component {\r\n\r\n  render() {\r\n\r\n    const { isAbout } = this.props;\r\n\r\n    return(\r\n      <div className=\"footer-div\">\r\n        <span onClick={ this.props.showAbout }>\r\n          { isAbout ? footerTitles[1].title : footerTitles[0].title }\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst footerTitles = [\r\n  {value: \"open\", title: \"обо мне\"},\r\n  {value: \"close\", title: \"закрыть\"}\r\n];\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\n\r\nimport LettersContent from \"../letters-content/letters-content/LettersContent\";\r\nimport About from \"../about/About\";\r\nimport Footer from \"../footer/Footer\";\r\n\r\nimport backsideLogo from \"../../../resources/backside-logo.png\";\r\nimport backsideLogoMax768 from \"../../../resources/backside-logo-max768.jpg\"\r\n\r\nimport \"./LeftPanel.css\";\r\n\r\n\r\nclass LeftPanel extends Component {\r\n\r\n  refToContentsUpdate = React.createRef();\r\n\r\n  state = {\r\n    isAbout: false,\r\n    contentsState: null\r\n  }\r\n\r\n  showAbout = () => {\r\n    this.setState(prevState => ({\r\n      isAbout: !prevState.isAbout\r\n    }));\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  beforeLettersContentsUnMount = (contentsState) => {\r\n    this.setState({\r\n      contentsState: contentsState\r\n    });\r\n  }\r\n\r\n  updateContents = () => {\r\n    this.refToContentsUpdate.current.updateContents();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { isAbout, contentsState } = this.state;\r\n    \r\n    return(\r\n      <div className=\"background-left-div\">\r\n        <div className=\"left-panel-div\">\r\n          {/*  <div className=\"logo-container-div\">\r\n            <picture>\r\n              <source media=\"(max-width: 768px)\" srcSet={ backsideLogoMax768 } />\r\n              <img className=\"backside-logo\" src={ backsideLogo } alt=\"\" />\r\n            </picture>\r\n          </div> */}\r\n          { isAbout ? \r\n            <About /> \r\n            : \r\n            <LettersContent \r\n              { ...this.props }\r\n              contentsState = { contentsState }\r\n              beforeLettersContentsUnMount={ this.beforeLettersContentsUnMount }\r\n              ref={ this.refToContentsUpdate }\r\n            />\r\n          }\r\n          <Footer showAbout={ this.showAbout } isAbout={ isAbout } />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftPanel;","import React, { Component } from \"react\";\r\n\r\nimport \"./AsyncLoader.css\";\r\n\r\n\r\nclass AsyncLoader extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"loader\">\r\n                loading...\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AsyncLoader;","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport \"./LetterDate.css\";\r\n\r\n\r\nclass LetterDate extends Component {\r\n\r\n  render() {\r\n\r\n    let date = moment().local();\r\n\r\n    if(this.props.date !== undefined)\r\n      date = moment(this.props.date); \r\n    \r\n    let day = date.date();\r\n    if(day < 10)\r\n      day = \"0\" + day;\r\n\r\n    let month = date.month() + 1;\r\n    if(month < 10)\r\n      month = \"0\" + month;\r\n\r\n    let year = date.year().toString(); \r\n\r\n    return (\r\n      <div className=\"date-div\">\r\n        { day + \" . \" + month + \" . \" + year }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LetterDate;","import React, { Component } from \"react\";\r\nimport CookieConsent, { Cookies } from \"react-cookie-consent\";\r\n\r\nimport AsyncLoader from \"../../async-loader/AsyncLoader\";\r\nimport LetterDate from \"../letter-date/LetterDate\";\r\n\r\nimport { getPublicLetterById } from \"../../../util/api\";\r\nimport { API_BASE_URL } from \"../../../util/const\";\r\n\r\nimport \"./Letter.css\";\r\n\r\n\r\nclass Letter extends Component {\r\n\r\n  state = {\r\n    id: -1,\r\n    title: \"\",\r\n    dateOfPublication: 0,\r\n    htmlText: \"\",\r\n    pictureURL: \"\",\r\n    isLoading: true\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await getPublicLetterById(parseInt(this.props.match.params.id))\r\n      .then(response => {\r\n        const { id, title, dateOfPublication, htmlText, pictureName } = response.data;\r\n        this.setState({\r\n          id: id,\r\n          title: title,\r\n          dateOfPublication: dateOfPublication,\r\n          htmlText: htmlText,\r\n      //    pictureURL: API_BASE_URL + \"/public/pictures/\" + pictureName,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { title, dateOfPublication, htmlText, pictureURL, isLoading } = this.state;\r\n    \r\n    return(\r\n      <div className=\"background-letter-div\">\r\n        <div className=\"letter-div animated\">\r\n          {isLoading ? <AsyncLoader /> : \r\n            <div>\r\n              <div className=\"letter-title-div\">\r\n                { title }\r\n              </div>\r\n              <LetterDate date={ dateOfPublication } />\r\n              <div className=\"html-text\" dangerouslySetInnerHTML={ {__html: htmlText} } />\r\n        {/*      <img\r\n                className=\"letter-picture\"\r\n                src={ pictureURL }\r\n                alt=\"\"\r\n        />    */}\r\n            </div>\r\n          }\r\n           <div className=\"cookie\">\r\n            \r\n            <CookieConsent\r\n          onAccept={() => {\r\n            alert(\"yay!\");\r\n          }}\r\n          debug={false}\r\n          enableDeclineButton\r\n          declineButtonText=\"Decline (optional)\"\r\n          onDecline={() => {\r\n            alert(\"Если Вы не согласны - немендленно покиньте этот сайт!\");\r\n          }}\r\n        >\r\n          Мой сайт использует для улучшения качества файлы куки. Если Вы не согласны - немендленно покиньте этот сайт!{\" \"}\r\n          <span style={{ fontSize: \"10px\" }}>\r\n            This bit of text is smaller :O\r\n          </span>\r\n        </CookieConsent>\r\n            \r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Letter;","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport LeftPanel from \"../left-panel/left-panel/LeftPanel\";\r\nimport Letter from \"../letter/letter/Letter\";\r\n\r\nimport { LETTERS_CONTENT_MODE } from \"../../util/const\";\r\n\r\n\r\nclass Public extends Component {\r\n\r\n  render() {\r\n    \r\n    const { match } = this.props;\r\n    \r\n    return(\r\n      <div className=\"public-div\">\r\n        <LeftPanel \r\n          { ...this.props }\r\n          path=\"/public/letters\" \r\n          mode={ LETTERS_CONTENT_MODE[1] }\r\n        />\r\n        <Route path={ match.path } component={ (props) => <Letter { ...props } /> } />  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Public;","import React, { Component } from \"react\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nclass PrivateRoute extends Component {\r\n\r\n  render() {\r\n\r\n    const { component: Component, authenticated, ...rest } = this.props;\r\n\r\n    return(\r\n      <Route { ...rest } render={ props =>\r\n        authenticated ? (\r\n          <Component { ...rest } { ...props } />\r\n        ) : (\r\n          <Redirect to={ { pathname: '/login', state: { from: props.location } } } />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivateRoute;","import React, { Component } from \"react\";\r\n\r\nimport { login } from \"../../util/api\";\r\nimport { ACCESS_TOKEN } from \"../../util/const\";\r\n\r\nimport \"./Login.css\";\r\n\r\n\r\nclass Login extends Component {\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\"\r\n  }\r\n\r\n  handleUsernameChange = (event) => {\r\n    const { target: { value } } = event;\r\n    this.setState({\r\n      username: value\r\n    });\r\n  }\r\n\r\n  handlePasswordChange = (event) => {\r\n    const { target: { value } } = event;\r\n    this.setState({\r\n      password: value\r\n    });\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const loginRequest = { \r\n      username: this.state.username, \r\n      password: this.state.password\r\n    };\r\n\r\n    login(loginRequest)\r\n      .then(response => {\r\n        console.log(response);\r\n        localStorage.setItem(ACCESS_TOKEN, response.data.accessToken);\r\n        this.props.onLogIn(this.props.history);\r\n      }).catch(error => {\r\n        console.log(JSON.parse(JSON.stringify(error)).response.data.status);\r\n      });; \r\n  }\r\n\r\n  render() {\r\n\r\n    const { username, password } = this.state;\r\n    \r\n    return(\r\n      <div className=\"login-div\">\r\n        <div className=\"login-background\">\r\n          <p className=\"warning\">{ warning }</p>\r\n            <span className=\"field-name-span\">логин:</span>\r\n            <input\r\n              type=\"text\"\r\n              value= { username } \r\n              id=\"username-input\" \r\n              className=\"login-input\" \r\n              onChange={ this.handleUsernameChange }\r\n            />\r\n            <span \r\n              id=\"password-span\" \r\n              className=\"field-name-span\"\r\n              onMouseDown={ this.showPassword }\r\n              onMouseUp={ this.hidePassword }>пароль:</span>\r\n            <input \r\n              type=\"password\"\r\n              value= { password }\r\n              id=\"password-input\" \r\n              className=\"login-input\"\r\n              onChange={ this.handlePasswordChange }\r\n            />\r\n            <button \r\n              className=\"login-button\"\r\n              onClick={ this.handleSubmit }>\r\n                обрести свободу\r\n            </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst warning = \"Если Вы не знаете, куда попали, прошу, покиньте эту территорию, ведь Вы не отыщите здесь того, чего хотите.\"\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nimport './GarbageIcon.css'\r\n\r\n\r\nclass GarbageIcon extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <svg \r\n          className=\"garbage-logo-svg\"\r\n          xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 55 60.01\"\r\n          onClick={ () => this.props.onClick() }>\r\n        <g className=\"garbage\">\r\n          <rect width=\"55\" height=\"60\" />\r\n          <path d=\"M53.28,8.64H40.42v-2A6.71,6.71,0,0,0,33.62,0H21.38a6.71,6.71,0,0,0-6.8,6.6v2H1.72a1.67,1.67,0,1,0,0,3.33h3.1V51.1A9.05,9.05,0,0,0,14,60H41a9.05,9.05,0,0,0,9.18-8.91V12h3.1a1.67,1.67,0,1,0,0-3.33ZM18,6.6a3.32,3.32,0,0,1,3.36-3.27H33.62A3.32,3.32,0,0,1,37,6.6v2H18ZM46.75,51.1A5.67,5.67,0,0,1,41,56.68H14A5.67,5.67,0,0,1,8.25,51.1V12H46.76V51.1Z\" />\r\n          <path d=\"M27.5,50.71A1.69,1.69,0,0,0,29.22,49V19.61a1.72,1.72,0,0,0-3.44,0V49A1.7,1.7,0,0,0,27.5,50.71Z\" />\r\n          <path d=\"M16.3,48.87A1.69,1.69,0,0,0,18,47.21V21.43a1.72,1.72,0,0,0-3.44,0V47.21A1.7,1.7,0,0,0,16.3,48.87Z\" />\r\n          <path d=\"M38.7,48.87a1.69,1.69,0,0,0,1.72-1.66V21.43a1.72,1.72,0,0,0-3.44,0V47.21A1.69,1.69,0,0,0,38.7,48.87Z\" />\r\n        </g>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GarbageIcon;","import React, { Component } from 'react';\r\n\r\nimport GarbageIcon from '../../icons/garbage-icon/GarbageIcon';\r\nimport preUploadImgLeave from '../../../resources/pre-upload-img-gray.svg';\r\nimport preUploadImgOn from '../../../resources/pre-upload-img-black.svg';\r\n\r\nimport { API_BASE_URL } from \"../../../util/const\";\r\n\r\nimport './ImgUploader.css'\r\n\r\n\r\nclass ImgUploader extends Component {\r\n\r\n  state = {\r\n    img: preUploadImgLeave,\r\n    imgControlDisplay: \"none\"\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if(props.pictureName !== null) {\r\n      const pictureUrl = API_BASE_URL + \"/public/pictures/\" + props.pictureName;\r\n      this.setState({\r\n        img: pictureUrl\r\n      });\r\n    }\r\n  }\r\n\r\n  fileInputHandler = (event) => {\r\n    const { target: { files } } = event;\r\n    if (files.length === 1 && files[0].type === \"image/jpeg\") {\r\n      this.setState({\r\n          img: URL.createObjectURL(files[0])\r\n      });\r\n      this.props.handleImgChange(files[0]);\r\n    }\r\n  }\r\n\r\n  onImgOver = () => {\r\n    const { img } = this.state;\r\n\r\n    if(img === preUploadImgLeave) {\r\n      this.setState({\r\n        img: preUploadImgOn\r\n      });\r\n    } else {\r\n      this.setState({\r\n        imgControlDisplay: \"block\"\r\n      });\r\n    }\r\n  }\r\n\r\n  onImgLeave = () => {\r\n    const { img } = this.state;\r\n\r\n    if(img === preUploadImgOn) {\r\n      this.setState({\r\n        img: preUploadImgLeave\r\n      });\r\n    } else {\r\n      this.setState({\r\n        imgControlDisplay: \"none\"\r\n      });\r\n    }\r\n  }\r\n\r\n  removeCurrentImg = () => {\r\n    this.setState({\r\n      img: preUploadImgLeave\r\n    });\r\n    this.props.handleImgChange(null);\r\n  }\r\n\r\n  render() {\r\n    let { img, imgControlDisplay } = this.state;\r\n\r\n    return (\r\n      <div className=\"img-uploader-div\">\r\n        <div \r\n          className=\"img-control-div\" \r\n          style={ { display: imgControlDisplay } }\r\n          onMouseOver={ this.onImgOver }\r\n          onMouseLeave={  this.onImgLeave }\r\n        >\r\n        <GarbageIcon \r\n          onClick={ this.removeCurrentImg } \r\n        />    \r\n        </div>\r\n        <input\r\n          type=\"file\"\r\n          ref={ fileInput => this.fileInput = fileInput }\r\n          onChange={ this.fileInputHandler }\r\n        />\r\n        <img\r\n          className=\"upload-img\"\r\n          onClick={ () => this.fileInput.click() } \r\n          onMouseOver={ this.onImgOver }\r\n          onMouseLeave={  this.onImgLeave }\r\n          src={ img }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImgUploader;","export function autoresize(elementId) {\r\n    \r\n  let textarea = document.getElementById(elementId);\r\n  \r\n  textarea.style.height = \"1px\";\r\n  textarea.style.height = (-8 + textarea.scrollHeight) + \"px\";\r\n}","import React, { Component } from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport LetterDate from '../../letter/letter-date/LetterDate';\r\nimport ImgUploader from '../img-uploader/ImgUploader.js'\r\n\r\nimport { getAnyLetterById, savePicture, saveLetter, deleteLetter } from '../../../util/api';\r\nimport { autoresize } from './autoresize.js';\r\n\r\nimport './LetterTemplate.css';\r\n\r\n\r\nclass LetterTemplate extends Component {\r\n\r\n  letterStates = [\r\n    { value: 'PUBLIC', label: 'паблик', className: \"dropdowns\" },\r\n    { value: 'DRAFT', label: 'черновик', className: \"dropdowns\" }\r\n  ];\r\n\r\n  state = {\r\n    id: null,\r\n    title: '',\r\n    dateOfPublication: new Date(),\r\n    htmlText: '',\r\n    picture: null,\r\n    pictureName: null,\r\n    letterState: this.letterStates[1],\r\n    isBeforeRemovingPopUp: false\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    if(this.props.match.params.id !== \"new_letter\") {\r\n      getAnyLetterById(parseInt(this.props.match.params.id))\r\n        .then(response => {\r\n          const { id, title, dateOfPublication, htmlText, pictureName, state } = response.data;\r\n            this.setState({\r\n              id: id,\r\n              title: title,\r\n              dateOfPublication: new Date(dateOfPublication),\r\n              htmlText: htmlText,\r\n              pictureName: pictureName,\r\n              letterState: this.letterStates.find(letterState => letterState.value === state)\r\n            });\r\n        });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    autoresize(\"textarea-input\");\r\n  }\r\n\r\n  saveLetter = async (event) => { \r\n    event.preventDefault(); \r\n\r\n    const { id, title, dateOfPublication, htmlText, \r\n                    picture, pictureName, letterState } = this.state;\r\n\r\n    let letter = {\r\n      id: id,\r\n      title: title,\r\n      dateOfPublication: dateOfPublication,\r\n      htmlText: htmlText,\r\n      state: letterState.value\r\n    };\r\n\r\n    if(id === null || picture !== null) {\r\n      const fileName = await this.savePicture();\r\n      letter.pictureName = fileName;\r\n    } else if(id !== null && picture === null) {\r\n      letter.pictureName = pictureName;\r\n    }\r\n    \r\n    saveLetter(letter)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          this.props.cellContentsUpdate();\r\n        }\r\n      });\r\n    \r\n  }\r\n\r\n  showBeforeRemovingPopUp = () => {\r\n    this.setState({\r\n      isBeforeRemovingPopUp: !this.state.isBeforeRemovingPopUp\r\n    });\r\n  }\r\n\r\n  allowRemoving = () => {\r\n    const { id } = this.state;\r\n    if(id !== null) {\r\n      deleteLetter(id)\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          this.setState({\r\n            isBeforeRemovingPopUp: false\r\n          });\r\n          this.props.cellContentsUpdate();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  savePicture = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"pictureFile\", this.state.picture);\r\n\r\n    const response = await savePicture(formData);\r\n    if(response.status === 200) {\r\n      return response.data.fileName\r\n    } else {\r\n      // !!! //\r\n    }\r\n  }\r\n\r\n  handleTitleChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      title: value\r\n    });\r\n  }\r\n\r\n  handleHtmlTextChange = (event) => {\r\n    autoresize(event.target.id);\r\n    const value = event.target.value;\r\n    this.setState({\r\n      htmlText: value\r\n    });\r\n  }\r\n\r\n  handleDropDownSelect = (letterState) => {\r\n    this.setState({\r\n      letterState: letterState\r\n    });\r\n  }\r\n\r\n  handleImgChange = (picture) => {\r\n    if (picture !== null) {\r\n      this.setState({\r\n        picture: picture\r\n      });\r\n    } else {\r\n      this.setState({\r\n        picture: null,\r\n        pictureName: null\r\n      });\r\n    }\r\n  }\r\n\r\n  render() { \r\n    const { title, dateOfPublication, htmlText, pictureName, isBeforeRemovingPopUp } = this.state;\r\n\r\n    return(\r\n      <div className=\"background-letter-editor-div\">\r\n        <div className=\"letter-editor\">\r\n          <input\r\n            id=\"title-input\"\r\n            className=\"input-authorship-field\"\r\n            type=\"text\"\r\n            placeholder=\"Заглавие\"\r\n            value={ title }\r\n            onChange={ this.handleTitleChange }\r\n          />\r\n          <LetterDate date={ dateOfPublication } />\r\n          <div>\r\n            <textarea\r\n              id=\"textarea-input\"\r\n              className=\"input-authorship-field\"\r\n              type=\"text\"\r\n              value={ htmlText }\r\n              onChange={ this.handleHtmlTextChange }\r\n            />\r\n            <ImgUploader\r\n              pictureName={ pictureName }\r\n              handleImgChange={ this.handleImgChange }\r\n            />\r\n            <div id=\"letter-save-div\">\r\n              <Dropdown\r\n                options={ this.letterStates }\r\n                onChange={ this.handleDropDownSelect }\r\n                value={ this.state.letterState }\r\n                className='dropdown-selector'\r\n                placeholderClassName='dropdown-placeholder'\r\n                controlClassName='control-dropdown-selector'\r\n                menuClassName='menu-dropdown-selector'\r\n                arrowClassName='arrow-dropdown-selector'\r\n              />\r\n              <div className=\"save-delete-div\">\r\n                <button className=\"save-button\" onClick={ this.saveLetter }>сохранить</button>\r\n                <button className=\"delete-button\" onClick={ this.showBeforeRemovingPopUp }>удалить</button>\r\n              </div>\r\n              <button className=\"logout-button\" onClick={ () => this.props.onLogOut(this.props.history) }>выйти</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        { isBeforeRemovingPopUp ? \r\n          <PopUpBeforeDeleting \r\n            allowRemoving={ this.allowRemoving } \r\n            showPopUp={ this.showBeforeRemovingPopUp }\r\n          /> : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PopUpBeforeDeleting = ({ ...props }) => {\r\n  return(\r\n    <div>\r\n      <div className=\"popup-background\" />\r\n      <div className=\"popup-context-div\">\r\n        <div className=\"message\">\r\n          Ты действительно хочешь удалить письмо?\r\n        </div>\r\n        <button \r\n          className=\"choice-button\"\r\n          onClick={ props.allowRemoving }>да</button>\r\n        <button \r\n          className=\"choice-button\" \r\n          onClick={ props.showPopUp }>нет</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LetterTemplate;","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport LeftPanel from \"../../left-panel/left-panel/LeftPanel\";\r\nimport LetterTemplate from \"../letter-template/LetterTemplate\";\r\n\r\nimport { LETTERS_CONTENT_MODE } from \"../../../util/const\";\r\n\r\n\r\nclass Authorship extends Component {\r\n\r\n  refToContentsUpdate = React.createRef();\r\n\r\n  updateContents = () => {\r\n    this.refToContentsUpdate.current.updateContents();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { match } = this.props;\r\n    \r\n    return (\r\n      <div className=\"authorship-div\">\r\n        <LeftPanel \r\n          { ...this.props }\r\n          path=\"/authorship/letters\"\r\n          mode={ LETTERS_CONTENT_MODE[0] }\r\n          ref={ this.refToContentsUpdate }\r\n        />\r\n        <Route \r\n          path={ match.path } \r\n          component={ (props) => \r\n            <LetterTemplate { ...props } { ...this.props } cellContentsUpdate={ this.updateContents } /> } \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Authorship;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport CookieConsent, { Cookies } from \"react-cookie-consent\";\r\nimport Public from \"../public/Public\";\r\nimport PrivateRoute from \"../private-route/PrivateRoute\";\r\nimport Login from \"../login/Login\";\r\nimport Authorship from \"../authorship/authorship/Authorship\";\r\n\r\nimport { checkAuth } from \"../../util/api\";\r\nimport { ACCESS_TOKEN } from \"../../util/const\";\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    isAuthenticated: false\r\n  }\r\n\r\n  componentWillReceiveProps = async () => {\r\n    await checkAuth()\r\n      .then(response => {\r\n        if(response.status === 200) {\r\n          this.setState({\r\n            isAuthenticated: true\r\n          });\r\n      }}).catch(error => {\r\n        this.setState({\r\n          isAuthenticated: false\r\n        });\r\n      });\r\n  }\r\n\r\n  handleLogIn = (history) => {\r\n    this.setState({\r\n      isAuthenticated: true\r\n    });\r\n    history.push(\"/authorship/letters/last\");\r\n  }\r\n\r\n  handleLogOut = (history) => {\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n\r\n    this.setState({\r\n      isAuthenticated: false\r\n    });\r\n\r\n    history.push(\"/public/letters/last\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exect path={ `/public/letters/:id` } component={ Public } />\r\n            <Route path=\"/login\" component={ (props) => <Login onLogIn={ this.handleLogIn } { ...props } /> } />\r\n            <PrivateRoute \r\n              authenticated={ this.state.isAuthenticated } \r\n              onLogOut= { this.handleLogOut }\r\n              path=\"/authorship/letters/:id\" \r\n              component={ Authorship }\r\n            />\r\n            <Redirect from=\"/\" to=\"/public/letters/last\" />\r\n           </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// asnkjsrdfjhkbns kjlrshjrrsjkrjhrfjhrjhsr:\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}